#pragma version 9

// This TEAL was generated by TEALScript v0.70.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its respective branch will be "NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
int 6
*
txn OnCompletion
+
switch call_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED

NOT_IMPLEMENTED:
	err

// authorizeCreator()void
authorizeCreator:
	proto 0 0

	// contracts/nft-membership-app.algo.ts:12
	// assert(this.app.creator === this.txn.sender)
	txna Applications 0
	app_params_get AppCreator
	assert
	txn Sender
	==
	assert
	retsub

abi_route_createApplication:
	// membershipPrice: uint64
	txna ApplicationArgs 1
	btoi

	// execute createApplication(uint64)void
	callsub createApplication
	int 1
	return

// createApplication(uint64)void
createApplication:
	proto 1 0

	// contracts/nft-membership-app.algo.ts:16
	// this.membershipPrice.value = membershipPrice
	byte 0x6d656d626572736869705072696365 // "membershipPrice"
	frame_dig -1 // membershipPrice: uint64
	app_global_put
	retsub

abi_route_createMembershipNft:
	// The ABI return prefix
	byte 0x151f7c75

	// assetUrl: string
	txna ApplicationArgs 4
	extract 2 0

	// unitName: string
	txna ApplicationArgs 3
	extract 2 0

	// total: uint64
	txna ApplicationArgs 2
	btoi

	// name: string
	txna ApplicationArgs 1
	extract 2 0

	// execute createMembershipNft(string,string,uint64,string)uint64
	callsub createMembershipNft
	itob
	concat
	log
	int 1
	return

// createMembershipNft(string,string,uint64,string)uint64
//
// A method that creates the Membership NFT
//
// @param name
// @param total
// @param unitName
// @param assetUrl
createMembershipNft:
	proto 4 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x

	// contracts/nft-membership-app.algo.ts:28
	// this.authorizeCreator()
	callsub authorizeCreator

	// contracts/nft-membership-app.algo.ts:30
	// createdAsset = sendAssetCreation({
	//       configAssetName: name,
	//       configAssetTotal: total,
	//       configAssetDecimals: 0,
	//       configAssetUnitName: unitName,
	//       configAssetURL: assetUrl,
	//       configAssetClawback: this.app.address,
	//       configAssetDefaultFrozen: 1,
	//       configAssetManager: this.app.address,
	//       configAssetReserve: this.app.address,
	//       configAssetFreeze: this.app.address,
	//     })
	itxn_begin
	int acfg
	itxn_field TypeEnum

	// contracts/nft-membership-app.algo.ts:31
	// configAssetName: name
	frame_dig -1 // name: string
	itxn_field ConfigAssetName

	// contracts/nft-membership-app.algo.ts:32
	// configAssetTotal: total
	frame_dig -2 // total: uint64
	itxn_field ConfigAssetTotal

	// contracts/nft-membership-app.algo.ts:33
	// configAssetDecimals: 0
	int 0
	itxn_field ConfigAssetDecimals

	// contracts/nft-membership-app.algo.ts:34
	// configAssetUnitName: unitName
	frame_dig -3 // unitName: string
	itxn_field ConfigAssetUnitName

	// contracts/nft-membership-app.algo.ts:35
	// configAssetURL: assetUrl
	frame_dig -4 // assetUrl: string
	itxn_field ConfigAssetURL

	// contracts/nft-membership-app.algo.ts:36
	// configAssetClawback: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetClawback

	// contracts/nft-membership-app.algo.ts:37
	// configAssetDefaultFrozen: 1
	int 1
	itxn_field ConfigAssetDefaultFrozen

	// contracts/nft-membership-app.algo.ts:38
	// configAssetManager: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetManager

	// contracts/nft-membership-app.algo.ts:39
	// configAssetReserve: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetReserve

	// contracts/nft-membership-app.algo.ts:40
	// configAssetFreeze: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetFreeze

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn CreatedAssetID
	frame_bury 0 // createdAsset: asset

	// contracts/nft-membership-app.algo.ts:43
	// this.membershipNft.value = createdAsset
	byte 0x6d656d626572736869704e6674 // "membershipNft"
	frame_dig 0 // createdAsset: asset
	app_global_put

	// contracts/nft-membership-app.algo.ts:45
	// return createdAsset;
	frame_dig 0 // createdAsset: asset

	// set the subroutine return value
	frame_bury 0
	retsub

abi_route_getMembership:
	// nftOptIn: axfer
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int axfer
	==
	assert

	// payment: pay
	txn GroupIndex
	int 2
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute getMembership(axfer,pay)void
	callsub getMembership
	int 1
	return

// getMembership(axfer,pay)void
//
// A method that allows a user to purchase a membership
//
// @param payment
getMembership:
	proto 2 0

	// contracts/nft-membership-app.algo.ts:54
	// assert(this.membershipNft.exists)
	txna Applications 0
	byte 0x6d656d626572736869704e6674 // "membershipNft"
	app_global_get_ex
	swap
	pop
	assert

	// contracts/nft-membership-app.algo.ts:55
	// assert(!this.memberInfo(this.txn.sender).exists || this.memberInfo(this.txn.sender).value === false)
	txn Sender
	box_len
	swap
	pop
	!
	dup
	bnz skip_or0
	txn Sender
	box_get
	assert
	int 0
	getbit
	int 0
	==
	||

skip_or0:
	assert

	// contracts/nft-membership-app.algo.ts:57
	// verifyPayTxn(payment, {
	//       amount: this.membershipPrice.value,
	//       receiver: this.app.address,
	//       sender: this.txn.sender,
	//     })
	// verify amount
	frame_dig -1 // payment: PayTxn
	gtxns Amount
	byte 0x6d656d626572736869705072696365 // "membershipPrice"
	app_global_get
	==
	assert

	// verify receiver
	frame_dig -1 // payment: PayTxn
	gtxns Receiver
	global CurrentApplicationAddress
	==
	assert

	// verify sender
	frame_dig -1 // payment: PayTxn
	gtxns Sender
	txn Sender
	==
	assert

	// contracts/nft-membership-app.algo.ts:63
	// verifyAssetTransferTxn(nftOptIn, {
	//       sender: this.txn.sender,
	//       xferAsset: this.membershipNft.value,
	//       assetAmount: 0,
	//       assetReceiver: this.txn.sender,
	//     })
	// verify sender
	frame_dig -2 // nftOptIn: AssetTransferTxn
	gtxns Sender
	txn Sender
	==
	assert

	// verify xferAsset
	frame_dig -2 // nftOptIn: AssetTransferTxn
	gtxns XferAsset
	byte 0x6d656d626572736869704e6674 // "membershipNft"
	app_global_get
	==
	assert

	// verify assetAmount
	frame_dig -2 // nftOptIn: AssetTransferTxn
	gtxns AssetAmount
	int 0
	==
	assert

	// verify assetReceiver
	frame_dig -2 // nftOptIn: AssetTransferTxn
	gtxns AssetReceiver
	txn Sender
	==
	assert

	// contracts/nft-membership-app.algo.ts:70
	// sendAssetTransfer({
	//       xferAsset: this.membershipNft.value,
	//       assetAmount: 1,
	//       assetSender: this.app.address,
	//       assetReceiver: this.txn.sender,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/nft-membership-app.algo.ts:71
	// xferAsset: this.membershipNft.value
	byte 0x6d656d626572736869704e6674 // "membershipNft"
	app_global_get
	itxn_field XferAsset

	// contracts/nft-membership-app.algo.ts:72
	// assetAmount: 1
	int 1
	itxn_field AssetAmount

	// contracts/nft-membership-app.algo.ts:73
	// assetSender: this.app.address
	global CurrentApplicationAddress
	itxn_field AssetSender

	// contracts/nft-membership-app.algo.ts:74
	// assetReceiver: this.txn.sender
	txn Sender
	itxn_field AssetReceiver

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/nft-membership-app.algo.ts:77
	// this.memberInfo(this.txn.sender).value = true
	txn Sender
	int 1
	byte 0x00
	int 0
	uncover 2
	setbit
	box_put
	retsub

abi_route_cancelMembership:
	// execute cancelMembership()void
	callsub cancelMembership
	int 1
	return

// cancelMembership()void
//
// A method that allows a user to cancel their membership
cancelMembership:
	proto 0 0

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x

	// contracts/nft-membership-app.algo.ts:84
	// assert(this.memberInfo(this.txn.sender).value === true)
	txn Sender
	box_get
	assert
	int 0
	getbit
	int 1
	==
	assert

	// contracts/nft-membership-app.algo.ts:85
	// assert(this.membershipNft.exists)
	txna Applications 0
	byte 0x6d656d626572736869704e6674 // "membershipNft"
	app_global_get_ex
	swap
	pop
	assert

	// contracts/nft-membership-app.algo.ts:88
	// sendAssetTransfer({
	//       sender: this.app.address,
	//       xferAsset: this.membershipNft.value,
	//       assetAmount: 1,
	//       assetSender: this.txn.sender,
	//       assetReceiver: this.app.address,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/nft-membership-app.algo.ts:89
	// sender: this.app.address
	global CurrentApplicationAddress
	itxn_field Sender

	// contracts/nft-membership-app.algo.ts:90
	// xferAsset: this.membershipNft.value
	byte 0x6d656d626572736869704e6674 // "membershipNft"
	app_global_get
	itxn_field XferAsset

	// contracts/nft-membership-app.algo.ts:91
	// assetAmount: 1
	int 1
	itxn_field AssetAmount

	// contracts/nft-membership-app.algo.ts:92
	// assetSender: this.txn.sender
	txn Sender
	itxn_field AssetSender

	// contracts/nft-membership-app.algo.ts:93
	// assetReceiver: this.app.address
	global CurrentApplicationAddress
	itxn_field AssetReceiver

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/nft-membership-app.algo.ts:96
	// this.memberInfo(this.txn.sender).delete()
	txn Sender
	box_del

	// contracts/nft-membership-app.algo.ts:98
	// refundAmount = this.membershipPrice.value
	byte 0x6d656d626572736869705072696365 // "membershipPrice"
	app_global_get
	frame_bury 0 // refundAmount: uint64

	// contracts/nft-membership-app.algo.ts:100
	// sendPayment({
	//       amount: refundAmount,
	//       receiver: this.txn.sender,
	//     })
	itxn_begin
	int pay
	itxn_field TypeEnum

	// contracts/nft-membership-app.algo.ts:101
	// amount: refundAmount
	frame_dig 0 // refundAmount: uint64
	itxn_field Amount

	// contracts/nft-membership-app.algo.ts:102
	// receiver: this.txn.sender
	txn Sender
	itxn_field Receiver

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

create_NoOp:
	method "createApplication(uint64)void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "createMembershipNft(string,uint64,string,string)uint64"
	method "getMembership(pay,axfer)void"
	method "cancelMembership()void"
	txna ApplicationArgs 0
	match abi_route_createMembershipNft abi_route_getMembership abi_route_cancelMembership
	err